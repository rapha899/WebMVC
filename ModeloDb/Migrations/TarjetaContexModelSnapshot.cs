// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModeloDb;

namespace ModeloDb.Migrations
{
    [DbContext(typeof(TarjetaContex))]
    partial class TarjetaContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Clases.Calculo", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Factur36")
                        .HasColumnType("real");

                    b.Property<float>("calculo")
                        .HasColumnType("real");

                    b.Property<float>("rol12")
                        .HasColumnType("real");

                    b.Property<float>("rol24")
                        .HasColumnType("real");

                    b.Property<int?>("rolPagoid")
                        .HasColumnType("int");

                    b.Property<int?>("rolPagosPublicaid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("rolPagoid");

                    b.HasIndex("rolPagosPublicaid");

                    b.ToTable("Calculos");
                });

            modelBuilder.Entity("Clases.Deuda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("CantidadDeuda")
                        .HasColumnType("real");

                    b.Property<int>("CurrentSolicitudid")
                        .HasColumnType("int");

                    b.Property<string>("TipoDeuda")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CurrentSolicitudid");

                    b.ToTable("Deudas");
                });

            modelBuilder.Entity("Clases.Factura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Calculos_Id")
                        .HasColumnType("int");

                    b.Property<int>("CurrentSolicitudid")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFactura")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Solicitudid")
                        .HasColumnType("int");

                    b.Property<int>("factura")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Calculos_Id")
                        .IsUnique();

                    b.HasIndex("Solicitudid");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Clases.Prerequisito", b =>
                {
                    b.Property<int>("RolPagoId")
                        .HasColumnType("int");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("RolPagoPublicaId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("RolPagoId", "FacturaId", "RolPagoPublicaId", "UsuarioId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("RolPagoPublicaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Prerequisito");
                });

            modelBuilder.Entity("Clases.RolPago", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentSolicitudid")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRol")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Solicitudid")
                        .HasColumnType("int");

                    b.Property<float>("monto")
                        .HasColumnType("real");

                    b.Property<int>("rolPago")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Solicitudid");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("Clases.RolPagoPublica", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentSolicitudid")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaRol")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Solicitudid")
                        .HasColumnType("int");

                    b.Property<int>("rolPagoPublica")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Solicitudid");

                    b.ToTable("RolPublica");
                });

            modelBuilder.Entity("Clases.Solicitud", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaSolicitud")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ingresos")
                        .HasColumnType("int");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tarjetaid")
                        .HasColumnType("int");

                    b.Property<string>("TipoEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usuarioid")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Tarjetaid");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Solicitudes");
                });

            modelBuilder.Entity("Clases.Tarjeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tarjetas");
                });

            modelBuilder.Entity("Clases.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cedula")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Clases.Calculo", b =>
                {
                    b.HasOne("Clases.RolPago", "rolPago")
                        .WithMany()
                        .HasForeignKey("rolPagoid");

                    b.HasOne("Clases.RolPagoPublica", "rolPagosPublica")
                        .WithMany()
                        .HasForeignKey("rolPagosPublicaid");

                    b.Navigation("rolPago");

                    b.Navigation("rolPagosPublica");
                });

            modelBuilder.Entity("Clases.Deuda", b =>
                {
                    b.HasOne("Clases.Solicitud", "Solicitud")
                        .WithMany("Deudas")
                        .HasForeignKey("CurrentSolicitudid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Clases.Factura", b =>
                {
                    b.HasOne("Clases.Calculo", "Calculos")
                        .WithOne("Facturas")
                        .HasForeignKey("Clases.Factura", "Calculos_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clases.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("Solicitudid");

                    b.Navigation("Calculos");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Clases.Prerequisito", b =>
                {
                    b.HasOne("Clases.Factura", "Factura")
                        .WithMany("Prerequsitos")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Clases.RolPago", "RolPago")
                        .WithMany("Prerequsitos")
                        .HasForeignKey("RolPagoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Clases.RolPagoPublica", "RolPagosPublica")
                        .WithMany("Prerequsitos")
                        .HasForeignKey("RolPagoPublicaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Clases.Usuario", "Usuario")
                        .WithMany("Prerequsitos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Factura");

                    b.Navigation("RolPago");

                    b.Navigation("RolPagosPublica");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Clases.RolPago", b =>
                {
                    b.HasOne("Clases.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("Solicitudid");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Clases.RolPagoPublica", b =>
                {
                    b.HasOne("Clases.Solicitud", "Solicitud")
                        .WithMany()
                        .HasForeignKey("Solicitudid");

                    b.Navigation("Solicitud");
                });

            modelBuilder.Entity("Clases.Solicitud", b =>
                {
                    b.HasOne("Clases.Tarjeta", "Tarjeta")
                        .WithMany("Solicitudes")
                        .HasForeignKey("Tarjetaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Clases.Usuario", "Usuario")
                        .WithMany("Solicitudes")
                        .HasForeignKey("Usuarioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tarjeta");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Clases.Calculo", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("Clases.Factura", b =>
                {
                    b.Navigation("Prerequsitos");
                });

            modelBuilder.Entity("Clases.RolPago", b =>
                {
                    b.Navigation("Prerequsitos");
                });

            modelBuilder.Entity("Clases.RolPagoPublica", b =>
                {
                    b.Navigation("Prerequsitos");
                });

            modelBuilder.Entity("Clases.Solicitud", b =>
                {
                    b.Navigation("Deudas");
                });

            modelBuilder.Entity("Clases.Tarjeta", b =>
                {
                    b.Navigation("Solicitudes");
                });

            modelBuilder.Entity("Clases.Usuario", b =>
                {
                    b.Navigation("Prerequsitos");

                    b.Navigation("Solicitudes");
                });
#pragma warning restore 612, 618
        }
    }
}
